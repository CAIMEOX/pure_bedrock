import * as M from "@minecraft/server"
export const world = M.world
export const system = M.system
export const canPlace_Block = a => b => c => a.canPlace(b,c)
export const getComponent_Block = a => b => a.getComponent(b)
export const getItemStack_Block = a => b => c => a.getItemStack(b,c)
export const getRedstonePower_Block = a => a.getRedstonePower()
export const getTags_Block = a => a.getTags()
export const hasTag_Block = a => b => a.hasTag(b)
export const isValid_Block = a => a.isValid()
export const setPermutation_Block = a => b => a.setPermutation(b)
export const setType_Block = a => b => a.setType(b)
export const trySetPermutation_Block = a => b => a.trySetPermutation(b)
export const constructor_BlockAreaSize = a => b => c => d => a.constructor(b,c,d)
export const equals_BlockAreaSize = a => b => a.equals(b)
export const subscribe_BlockBreakAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_BlockBreakAfterEventSignal = a => b => a.unsubscribe(b)
export const isValid_BlockComponent = a => a.isValid()
export const subscribe_BlockExplodeAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_BlockExplodeAfterEventSignal = a => b => a.unsubscribe(b)
export const isValid_BlockInventoryComponent = a => a.isValid()
export const isValidLiquid_BlockLavaContainerComponent = a => a.isValidLiquid()
export const isValidLiquid_BlockLiquidContainerComponent = a => a.isValidLiquid()
export const isValid_BlockLiquidContainerComponent = a => a.isValid()
export const clone_BlockPermutation = a => a.clone()
export const getAllStates_BlockPermutation = a => a.getAllStates()
export const getItemStack_BlockPermutation = a => b => a.getItemStack(b)
export const getState_BlockPermutation = a => b => a.getState(b)
export const getTags_BlockPermutation = a => a.getTags()
export const hasTag_BlockPermutation = a => b => a.hasTag(b)
export const matches_BlockPermutation = a => b => c => a.matches(b,c)
export const resolve_BlockPermutation = a => b => M.BlockPermutation.resolve(a,b)
export const withState_BlockPermutation = a => b => c => a.withState(b,c)
export const getAttachedBlocks_BlockPistonComponent = a => a.getAttachedBlocks()
export const isValid_BlockPistonComponent = a => a.isValid()
export const subscribe_BlockPlaceAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_BlockPlaceAfterEventSignal = a => b => a.unsubscribe(b)
export const setPotionType_BlockPotionContainerComponent = a => b => a.setPotionType(b)
export const isValidLiquid_BlockPotionContainerComponent = a => a.isValidLiquid()
export const isValid_BlockPotionContainerComponent = a => a.isValid()
export const clearRecord_BlockRecordPlayerComponent = a => a.clearRecord()
export const isPlaying_BlockRecordPlayerComponent = a => a.isPlaying()
export const setRecord_BlockRecordPlayerComponent = a => b => a.setRecord(b)
export const isValid_BlockRecordPlayerComponent = a => a.isValid()
export const getRawText_BlockSignComponent = a => b => a.getRawText(b)
export const getText_BlockSignComponent = a => b => a.getText(b)
export const getTextDyeColor_BlockSignComponent = a => b => a.getTextDyeColor(b)
export const setText_BlockSignComponent = a => b => c => a.setText(b,c)
export const setTextDyeColor_BlockSignComponent = a => b => c => a.setTextDyeColor(b,c)
export const setWaxed_BlockSignComponent = a => a.setWaxed()
export const isValid_BlockSignComponent = a => a.isValid()
export const isValidLiquid_BlockSnowContainerComponent = a => a.isValidLiquid()
export const isValid_BlockSnowContainerComponent = a => a.isValid()
export const get_BlockStates = a => M.BlockStates.get(a)
export const getAll_BlockStates = () => M.BlockStates.getAll()
export const get_BlockTypes = a => M.BlockTypes.get(a)
export const getAll_BlockTypes = () => M.BlockTypes.getAll()
export const doesLocationTouchFaces_BlockVolumeUtils = a => b => M.BlockVolumeUtils.doesLocationTouchFaces(a,b)
export const doesVolumeTouchFaces_BlockVolumeUtils = a => b => M.BlockVolumeUtils.doesVolumeTouchFaces(a,b)
export const equals_BlockVolumeUtils = a => b => M.BlockVolumeUtils.equals(a,b)
export const getBlockLocationIterator_BlockVolumeUtils = a => M.BlockVolumeUtils.getBlockLocationIterator(a)
export const getBoundingBox_BlockVolumeUtils = a => M.BlockVolumeUtils.getBoundingBox(a)
export const getCapacity_BlockVolumeUtils = a => M.BlockVolumeUtils.getCapacity(a)
export const getMax_BlockVolumeUtils = a => M.BlockVolumeUtils.getMax(a)
export const getMin_BlockVolumeUtils = a => M.BlockVolumeUtils.getMin(a)
export const getSpan_BlockVolumeUtils = a => M.BlockVolumeUtils.getSpan(a)
export const intersects_BlockVolumeUtils = a => b => M.BlockVolumeUtils.intersects(a,b)
export const isInside_BlockVolumeUtils = a => b => M.BlockVolumeUtils.isInside(a,b)
export const translate_BlockVolumeUtils = a => b => M.BlockVolumeUtils.translate(a,b)
export const addDye_BlockWaterContainerComponent = a => b => a.addDye(b)
export const getCustomColor_BlockWaterContainerComponent = a => a.getCustomColor()
export const setCustomColor_BlockWaterContainerComponent = a => b => a.setCustomColor(b)
export const isValidLiquid_BlockWaterContainerComponent = a => a.isValidLiquid()
export const isValid_BlockWaterContainerComponent = a => a.isValid()
export const createValid_BoundingBoxUtils = a => b => M.BoundingBoxUtils.createValid(a,b)
export const dilate_BoundingBoxUtils = a => b => M.BoundingBoxUtils.dilate(a,b)
export const equals_BoundingBoxUtils = a => b => M.BoundingBoxUtils.equals(a,b)
export const expand_BoundingBoxUtils = a => b => M.BoundingBoxUtils.expand(a,b)
export const getCenter_BoundingBoxUtils = a => M.BoundingBoxUtils.getCenter(a)
export const getIntersection_BoundingBoxUtils = a => b => M.BoundingBoxUtils.getIntersection(a,b)
export const getSpan_BoundingBoxUtils = a => M.BoundingBoxUtils.getSpan(a)
export const intersects_BoundingBoxUtils = a => b => M.BoundingBoxUtils.intersects(a,b)
export const isInside_BoundingBoxUtils = a => b => M.BoundingBoxUtils.isInside(a,b)
export const isValid_BoundingBoxUtils = a => M.BoundingBoxUtils.isValid(a)
export const translate_BoundingBoxUtils = a => b => M.BoundingBoxUtils.translate(a,b)
export const subscribe_ButtonPushAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ButtonPushAfterEventSignal = a => b => a.unsubscribe(b)
export const clear_Camera = a => a.clear()
export const fade_Camera = a => b => a.fade(b)
export const setCamera_Camera = a => b => c => a.setCamera(b,c)
export const getTargets_ChatSendAfterEvent = a => a.getTargets()
export const subscribe_ChatSendAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ChatSendAfterEventSignal = a => b => a.unsubscribe(b)
export const setTargets_ChatSendBeforeEvent = a => b => a.setTargets(b)
export const getTargets_ChatSendBeforeEvent = a => a.getTargets()
export const subscribe_ChatSendBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ChatSendBeforeEventSignal = a => b => a.unsubscribe(b)
export const isValid_Component = a => a.isValid()
export const clear_CompoundBlockVolume = a => a.clear()
export const constructor_CompoundBlockVolume = a => b => a.constructor(b)
export const getBlockLocationIterator_CompoundBlockVolume = a => a.getBlockLocationIterator()
export const getBoundingBox_CompoundBlockVolume = a => a.getBoundingBox()
export const getMax_CompoundBlockVolume = a => a.getMax()
export const getMin_CompoundBlockVolume = a => a.getMin()
export const getOrigin_CompoundBlockVolume = a => a.getOrigin()
export const isEmpty_CompoundBlockVolume = a => a.isEmpty()
export const isInside_CompoundBlockVolume = a => b => a.isInside(b)
export const peekLastVolume_CompoundBlockVolume = a => b => a.peekLastVolume(b)
export const popVolume_CompoundBlockVolume = a => a.popVolume()
export const pushVolume_CompoundBlockVolume = a => b => a.pushVolume(b)
export const replaceOrAddLastVolume_CompoundBlockVolume = a => b => a.replaceOrAddLastVolume(b)
export const setOrigin_CompoundBlockVolume = a => b => c => a.setOrigin(b,c)
export const translateOrigin_CompoundBlockVolume = a => b => c => a.translateOrigin(b,c)
export const addItem_Container = a => b => a.addItem(b)
export const clearAll_Container = a => a.clearAll()
export const getItem_Container = a => b => a.getItem(b)
export const getSlot_Container = a => b => a.getSlot(b)
export const isValid_Container = a => a.isValid()
export const moveItem_Container = a => b => c => d => a.moveItem(b,c,d)
export const setItem_Container = a => b => c => a.setItem(b,c)
export const swapItems_Container = a => b => c => d => a.swapItems(b,c,d)
export const transferItem_Container = a => b => c => a.transferItem(b,c)
export const getItem_ContainerSlot = a => a.getItem()
export const getLore_ContainerSlot = a => a.getLore()
export const getTags_ContainerSlot = a => a.getTags()
export const hasTag_ContainerSlot = a => b => a.hasTag(b)
export const isStackableWith_ContainerSlot = a => b => a.isStackableWith(b)
export const isValid_ContainerSlot = a => a.isValid()
export const setCanDestroy_ContainerSlot = a => b => a.setCanDestroy(b)
export const setCanPlaceOn_ContainerSlot = a => b => a.setCanPlaceOn(b)
export const setItem_ContainerSlot = a => b => a.setItem(b)
export const setLore_ContainerSlot = a => b => a.setLore(b)
export const getModifiers_DataDrivenEntityTriggerAfterEvent = a => a.getModifiers()
export const subscribe_DataDrivenEntityTriggerAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_DataDrivenEntityTriggerAfterEventSignal = a => b => a.unsubscribe(b)
export const getModifiers_DataDrivenEntityTriggerBeforeEvent = a => a.getModifiers()
export const setModifiers_DataDrivenEntityTriggerBeforeEvent = a => b => a.setModifiers(b)
export const subscribe_DataDrivenEntityTriggerBeforeEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_DataDrivenEntityTriggerBeforeEventSignal = a => b => a.unsubscribe(b)
export const constructor_DefinitionModifier = a => a.constructor()
export const getComponentGroupsToAdd_DefinitionModifier = a => a.getComponentGroupsToAdd()
export const getComponentGroupsToRemove_DefinitionModifier = a => a.getComponentGroupsToRemove()
export const getTriggers_DefinitionModifier = a => a.getTriggers()
export const setComponentGroupsToAdd_DefinitionModifier = a => b => a.setComponentGroupsToAdd(b)
export const setComponentGroupsToRemove_DefinitionModifier = a => b => a.setComponentGroupsToRemove(b)
export const setTriggers_DefinitionModifier = a => b => a.setTriggers(b)
export const createExplosion_Dimension = a => b => c => d => a.createExplosion(b,c,d)
export const fillBlocks_Dimension = a => b => c => d => e => a.fillBlocks(b,c,d,e)
export const getBlock_Dimension = a => b => a.getBlock(b)
export const getBlockFromRay_Dimension = a => b => c => d => a.getBlockFromRay(b,c,d)
export const getEntities_Dimension = a => b => a.getEntities(b)
export const getEntitiesAtBlockLocation_Dimension = a => b => a.getEntitiesAtBlockLocation(b)
export const getEntitiesFromRay_Dimension = a => b => c => d => a.getEntitiesFromRay(b,c,d)
export const getPlayers_Dimension = a => b => a.getPlayers(b)
export const runCommand_Dimension = a => b => a.runCommand(b)
export const runCommandAsync_Dimension = a => b => a.runCommandAsync(b)
export const setWeather_Dimension = a => b => a.setWeather(b)
export const spawnEntity_Dimension = a => b => c => a.spawnEntity(b,c)
export const spawnItem_Dimension = a => b => c => a.spawnItem(b,c)
export const spawnParticle_Dimension = a => b => c => d => a.spawnParticle(b,c,d)
export const get_DimensionTypes = a => M.DimensionTypes.get(a)
export const getAll_DimensionTypes = () => M.DimensionTypes.getAll()
export const constructor_DynamicPropertiesDefinition = a => a.constructor()
export const defineBoolean_DynamicPropertiesDefinition = a => b => c => a.defineBoolean(b,c)
export const defineNumber_DynamicPropertiesDefinition = a => b => c => a.defineNumber(b,c)
export const defineString_DynamicPropertiesDefinition = a => b => c => d => a.defineString(b,c,d)
export const defineVector_DynamicPropertiesDefinition = a => b => c => a.defineVector(b,c)
export const isValid_Effect = a => a.isValid()
export const subscribe_EffectAddAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EffectAddAfterEventSignal = a => b => a.unsubscribe(b)
export const getName_EffectType = a => a.getName()
export const get_EffectTypes = a => M.EffectTypes.get(a)
export const getAll_EffectTypes = () => M.EffectTypes.getAll()
export const constructor_Enchantment = a => b => c => a.constructor(b,c)
export const addEnchantment_EnchantmentList = a => b => a.addEnchantment(b)
export const canAddEnchantment_EnchantmentList = a => b => a.canAddEnchantment(b)
export const constructor_EnchantmentList = a => b => a.constructor(b)
export const getEnchantment_EnchantmentList = a => b => a.getEnchantment(b)
export const hasEnchantment_EnchantmentList = a => b => a.hasEnchantment(b)
export const removeEnchantment_EnchantmentList = a => b => a.removeEnchantment(b)
export const get_EnchantmentTypes = a => M.EnchantmentTypes.get(a)
export const addEffect_Entity = a => b => c => d => a.addEffect(b,c,d)
export const addTag_Entity = a => b => a.addTag(b)
export const applyDamage_Entity = a => b => c => a.applyDamage(b,c)
export const applyImpulse_Entity = a => b => a.applyImpulse(b)
export const applyKnockback_Entity = a => b => c => d => e => a.applyKnockback(b,c,d,e)
export const clearVelocity_Entity = a => a.clearVelocity()
export const extinguishFire_Entity = a => b => a.extinguishFire(b)
export const getBlockFromViewDirection_Entity = a => b => a.getBlockFromViewDirection(b)
export const getComponent_Entity = a => b => a.getComponent(b)
export const getComponents_Entity = a => a.getComponents()
export const getDynamicProperty_Entity = a => b => a.getDynamicProperty(b)
export const getEffect_Entity = a => b => a.getEffect(b)
export const getEffects_Entity = a => a.getEffects()
export const getEntitiesFromViewDirection_Entity = a => b => a.getEntitiesFromViewDirection(b)
export const getHeadLocation_Entity = a => a.getHeadLocation()
export const getRotation_Entity = a => a.getRotation()
export const getTags_Entity = a => a.getTags()
export const getVelocity_Entity = a => a.getVelocity()
export const getViewDirection_Entity = a => a.getViewDirection()
export const hasComponent_Entity = a => b => a.hasComponent(b)
export const hasTag_Entity = a => b => a.hasTag(b)
export const isValid_Entity = a => a.isValid()
export const kill_Entity = a => a.kill()
export const playAnimation_Entity = a => b => c => a.playAnimation(b,c)
export const remove_Entity = a => a.remove()
export const removeDynamicProperty_Entity = a => b => a.removeDynamicProperty(b)
export const removeEffect_Entity = a => b => a.removeEffect(b)
export const removeTag_Entity = a => b => a.removeTag(b)
export const runCommand_Entity = a => b => a.runCommand(b)
export const runCommandAsync_Entity = a => b => a.runCommandAsync(b)
export const setDynamicProperty_Entity = a => b => c => a.setDynamicProperty(b,c)
export const setOnFire_Entity = a => b => c => a.setOnFire(b,c)
export const setRotation_Entity = a => b => a.setRotation(b)
export const teleport_Entity = a => b => c => a.teleport(b,c)
export const triggerEvent_Entity = a => b => a.triggerEvent(b)
export const tryTeleport_Entity = a => b => c => a.tryTeleport(b,c)
export const getDropItems_EntityAgeableComponent = a => a.getDropItems()
export const getFeedItems_EntityAgeableComponent = a => a.getFeedItems()
export const resetToDefaultValue_EntityAttributeComponent = a => a.resetToDefaultValue()
export const resetToMaxValue_EntityAttributeComponent = a => a.resetToMaxValue()
export const resetToMinValue_EntityAttributeComponent = a => a.resetToMinValue()
export const setCurrentValue_EntityAttributeComponent = a => b => a.setCurrentValue(b)
export const getBreatheBlocks_EntityBreathableComponent = a => a.getBreatheBlocks()
export const getNonBreatheBlocks_EntityBreathableComponent = a => a.getNonBreatheBlocks()
export const setAirSupply_EntityBreathableComponent = a => b => a.setAirSupply(b)
export const isValid_EntityComponent = a => a.isValid()
export const subscribe_EntityDieAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityDieAfterEventSignal = a => b => a.unsubscribe(b)
export const getEquipment_EntityEquippableComponent = a => b => a.getEquipment(b)
export const getEquipmentSlot_EntityEquippableComponent = a => b => a.getEquipmentSlot(b)
export const setEquipment_EntityEquippableComponent = a => b => c => a.setEquipment(b,c)
export const isValid_EntityEquippableComponent = a => a.isValid()
export const isValid_EntityFireImmuneComponent = a => a.isValid()
export const isValid_EntityFloatsInLiquidComponent = a => a.isValid()
export const isValid_EntityFlyingSpeedComponent = a => a.isValid()
export const isValid_EntityFrictionModifierComponent = a => a.isValid()
export const isValid_EntityGroundOffsetComponent = a => a.isValid()
export const getFeedItems_EntityHealableComponent = a => a.getFeedItems()
export const isValid_EntityHealableComponent = a => a.isValid()
export const subscribe_EntityHealthChangedAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityHealthChangedAfterEventSignal = a => b => a.unsubscribe(b)
export const resetToDefaultValue_EntityHealthComponent = a => a.resetToDefaultValue()
export const resetToMaxValue_EntityHealthComponent = a => a.resetToMaxValue()
export const resetToMinValue_EntityHealthComponent = a => a.resetToMinValue()
export const setCurrentValue_EntityHealthComponent = a => b => a.setCurrentValue(b)
export const subscribe_EntityHitBlockAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityHitBlockAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_EntityHitEntityAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityHitEntityAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_EntityHurtAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityHurtAfterEventSignal = a => b => a.unsubscribe(b)
export const isValid_EntityInventoryComponent = a => a.isValid()
export const isValid_EntityIsBabyComponent = a => a.isValid()
export const isValid_EntityIsChargedComponent = a => a.isValid()
export const isValid_EntityIsChestedComponent = a => a.isValid()
export const isValid_EntityIsDyeableComponent = a => a.isValid()
export const isValid_EntityIsHiddenWhenInvisibleComponent = a => a.isValid()
export const isValid_EntityIsIgnitedComponent = a => a.isValid()
export const isValid_EntityIsIllagerCaptainComponent = a => a.isValid()
export const isValid_EntityIsSaddledComponent = a => a.isValid()
export const isValid_EntityIsShakingComponent = a => a.isValid()
export const isValid_EntityIsShearedComponent = a => a.isValid()
export const isValid_EntityIsStackableComponent = a => a.isValid()
export const isValid_EntityIsStunnedComponent = a => a.isValid()
export const isValid_EntityIsTamedComponent = a => a.isValid()
export const isValid_EntityItemComponent = a => a.isValid()
export const resetToDefaultValue_EntityLavaMovementComponent = a => a.resetToDefaultValue()
export const resetToMaxValue_EntityLavaMovementComponent = a => a.resetToMaxValue()
export const resetToMinValue_EntityLavaMovementComponent = a => a.resetToMinValue()
export const setCurrentValue_EntityLavaMovementComponent = a => b => a.setCurrentValue(b)
export const leash_EntityLeashableComponent = a => b => a.leash(b)
export const unleash_EntityLeashableComponent = a => a.unleash()
export const isValid_EntityLeashableComponent = a => a.isValid()
export const isValid_EntityMarkVariantComponent = a => a.isValid()
export const setTamed_EntityMountTamingComponent = a => b => a.setTamed(b)
export const isValid_EntityMountTamingComponent = a => a.isValid()
export const resetToDefaultValue_EntityMovementComponent = a => a.resetToDefaultValue()
export const resetToMaxValue_EntityMovementComponent = a => a.resetToMaxValue()
export const resetToMinValue_EntityMovementComponent = a => a.resetToMinValue()
export const setCurrentValue_EntityMovementComponent = a => b => a.setCurrentValue(b)
export const isValid_EntityNavigationComponent = a => a.isValid()
export const isValid_EntityNavigationFloatComponent = a => a.isValid()
export const isValid_EntityNavigationFlyComponent = a => a.isValid()
export const isValid_EntityNavigationGenericComponent = a => a.isValid()
export const isValid_EntityNavigationHoverComponent = a => a.isValid()
export const isValid_EntityNavigationWalkComponent = a => a.isValid()
export const isValid_EntityOnFireComponent = a => a.isValid()
export const isValid_EntityPushThroughComponent = a => a.isValid()
export const subscribe_EntityRemovedAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_EntityRemovedAfterEventSignal = a => b => a.unsubscribe(b)
export const addRider_EntityRideableComponent = a => b => a.addRider(b)
export const ejectRider_EntityRideableComponent = a => b => a.ejectRider(b)
export const ejectRiders_EntityRideableComponent = a => a.ejectRiders()
export const getFamilyTypes_EntityRideableComponent = a => a.getFamilyTypes()
export const getRiders_EntityRideableComponent = a => a.getRiders()
export const getSeats_EntityRideableComponent = a => a.getSeats()
export const isValid_EntityRideableComponent = a => a.isValid()
export const isValid_EntityRidingComponent = a => a.isValid()
export const isValid_EntityScaleComponent = a => a.isValid()
export const isValid_EntitySkinIdComponent = a => a.isValid()
export const subscribe_EntitySpawnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_EntitySpawnAfterEventSignal = a => b => a.unsubscribe(b)
export const isValid_EntityStrengthComponent = a => a.isValid()
export const getTameItems_EntityTameableComponent = a => a.getTameItems()
export const tame_EntityTameableComponent = a => a.tame()
export const isValid_EntityTameableComponent = a => a.isValid()
export const get_EntityTypes = a => M.EntityTypes.get(a)
export const getAll_EntityTypes = () => M.EntityTypes.getAll()
export const resetToDefaultValue_EntityUnderwaterMovementComponent = a => a.resetToDefaultValue()
export const resetToMaxValue_EntityUnderwaterMovementComponent = a => a.resetToMaxValue()
export const resetToMinValue_EntityUnderwaterMovementComponent = a => a.resetToMinValue()
export const setCurrentValue_EntityUnderwaterMovementComponent = a => b => a.setCurrentValue(b)
export const isValid_EntityVariantComponent = a => a.isValid()
export const isValid_EntityWantsJockeyComponent = a => a.isValid()
export const getImpactedBlocks_ExplosionAfterEvent = a => a.getImpactedBlocks()
export const subscribe_ExplosionAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ExplosionAfterEventSignal = a => b => a.unsubscribe(b)
export const setImpactedBlocks_ExplosionBeforeEvent = a => b => a.setImpactedBlocks(b)
export const getImpactedBlocks_ExplosionBeforeEvent = a => a.getImpactedBlocks()
export const subscribe_ExplosionBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ExplosionBeforeEventSignal = a => b => a.unsubscribe(b)
export const getEffects_FeedItem = a => a.getEffects()
export const subscribe_IButtonPushAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_IButtonPushAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ILeverActionAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ILeverActionAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_IPlayerJoinAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_IPlayerJoinAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_IPlayerLeaveAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_IPlayerLeaveAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_IPlayerSpawnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_IPlayerSpawnAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemCompleteUseAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemCompleteUseAfterEventSignal = a => b => a.unsubscribe(b)
export const isValid_ItemComponent = a => a.isValid()
export const startCooldown_ItemCooldownComponent = a => b => a.startCooldown(b)
export const isValid_ItemCooldownComponent = a => a.isValid()
export const subscribe_ItemDefinitionAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemDefinitionAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemDefinitionBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemDefinitionBeforeEventSignal = a => b => a.unsubscribe(b)
export const getDamageChance_ItemDurabilityComponent = a => b => a.getDamageChance(b)
export const getDamageRange_ItemDurabilityComponent = a => a.getDamageRange()
export const isValid_ItemDurabilityComponent = a => a.isValid()
export const removeAllEnchantments_ItemEnchantsComponent = a => a.removeAllEnchantments()
export const isValid_ItemEnchantsComponent = a => a.isValid()
export const isValid_ItemFoodComponent = a => a.isValid()
export const subscribe_ItemReleaseUseAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemReleaseUseAfterEventSignal = a => b => a.unsubscribe(b)
export const clone_ItemStack = a => a.clone()
export const constructor_ItemStack = a => b => c => a.constructor(b,c)
export const getComponent_ItemStack = a => b => a.getComponent(b)
export const getComponents_ItemStack = a => a.getComponents()
export const getLore_ItemStack = a => a.getLore()
export const getTags_ItemStack = a => a.getTags()
export const hasComponent_ItemStack = a => b => a.hasComponent(b)
export const hasTag_ItemStack = a => b => a.hasTag(b)
export const isStackableWith_ItemStack = a => b => a.isStackableWith(b)
export const setCanDestroy_ItemStack = a => b => a.setCanDestroy(b)
export const setCanPlaceOn_ItemStack = a => b => a.setCanPlaceOn(b)
export const setLore_ItemStack = a => b => a.setLore(b)
export const triggerEvent_ItemStack = a => b => a.triggerEvent(b)
export const subscribe_ItemStartUseAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemStartUseAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemStartUseOnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemStartUseOnAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemStopUseAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemStopUseAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemStopUseOnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemStopUseOnAfterEventSignal = a => b => a.unsubscribe(b)
export const get_ItemTypes = a => M.ItemTypes.get(a)
export const getAll_ItemTypes = () => M.ItemTypes.getAll()
export const subscribe_ItemUseAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemUseAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemUseBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemUseBeforeEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemUseOnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemUseOnAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ItemUseOnBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ItemUseOnBeforeEventSignal = a => b => a.unsubscribe(b)
export const subscribe_LeverActionAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_LeverActionAfterEventSignal = a => b => a.unsubscribe(b)
export const constructor_MolangVariableMap = a => a.constructor()
export const setColorRGB_MolangVariableMap = a => b => c => a.setColorRGB(b,c)
export const setColorRGBA_MolangVariableMap = a => b => c => a.setColorRGBA(b,c)
export const setFloat_MolangVariableMap = a => b => c => a.setFloat(b,c)
export const setSpeedAndDirection_MolangVariableMap = a => b => c => d => a.setSpeedAndDirection(b,c,d)
export const setVector3_MolangVariableMap = a => b => c => a.setVector3(b,c)
export const getPath_NavigationResult = a => a.getPath()
export const subscribe_PistonActivateAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PistonActivateAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_PistonActivateBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PistonActivateBeforeEventSignal = a => b => a.unsubscribe(b)
export const addExperience_Player = a => b => a.addExperience(b)
export const addLevels_Player = a => b => a.addLevels(b)
export const getItemCooldown_Player = a => b => a.getItemCooldown(b)
export const getSpawnPoint_Player = a => a.getSpawnPoint()
export const getTotalXp_Player = a => a.getTotalXp()
export const isOp_Player = a => a.isOp()
export const playSound_Player = a => b => c => a.playSound(b,c)
export const postClientMessage_Player = a => b => c => a.postClientMessage(b,c)
export const resetLevel_Player = a => a.resetLevel()
export const sendMessage_Player = a => b => a.sendMessage(b)
export const setOp_Player = a => b => a.setOp(b)
export const setSpawnPoint_Player = a => b => a.setSpawnPoint(b)
export const startItemCooldown_Player = a => b => c => a.startItemCooldown(b,c)
export const addEffect_Player = a => b => c => d => a.addEffect(b,c,d)
export const addTag_Player = a => b => a.addTag(b)
export const applyDamage_Player = a => b => c => a.applyDamage(b,c)
export const applyImpulse_Player = a => b => a.applyImpulse(b)
export const applyKnockback_Player = a => b => c => d => e => a.applyKnockback(b,c,d,e)
export const clearVelocity_Player = a => a.clearVelocity()
export const extinguishFire_Player = a => b => a.extinguishFire(b)
export const getBlockFromViewDirection_Player = a => b => a.getBlockFromViewDirection(b)
export const getComponent_Player = a => b => a.getComponent(b)
export const getComponents_Player = a => a.getComponents()
export const getDynamicProperty_Player = a => b => a.getDynamicProperty(b)
export const getEffect_Player = a => b => a.getEffect(b)
export const getEffects_Player = a => a.getEffects()
export const getEntitiesFromViewDirection_Player = a => b => a.getEntitiesFromViewDirection(b)
export const getHeadLocation_Player = a => a.getHeadLocation()
export const getRotation_Player = a => a.getRotation()
export const getTags_Player = a => a.getTags()
export const getVelocity_Player = a => a.getVelocity()
export const getViewDirection_Player = a => a.getViewDirection()
export const hasComponent_Player = a => b => a.hasComponent(b)
export const hasTag_Player = a => b => a.hasTag(b)
export const isValid_Player = a => a.isValid()
export const kill_Player = a => a.kill()
export const playAnimation_Player = a => b => c => a.playAnimation(b,c)
export const remove_Player = a => a.remove()
export const removeDynamicProperty_Player = a => b => a.removeDynamicProperty(b)
export const removeEffect_Player = a => b => a.removeEffect(b)
export const removeTag_Player = a => b => a.removeTag(b)
export const runCommand_Player = a => b => a.runCommand(b)
export const runCommandAsync_Player = a => b => a.runCommandAsync(b)
export const setDynamicProperty_Player = a => b => c => a.setDynamicProperty(b,c)
export const setOnFire_Player = a => b => c => a.setOnFire(b,c)
export const setRotation_Player = a => b => a.setRotation(b)
export const teleport_Player = a => b => c => a.teleport(b,c)
export const triggerEvent_Player = a => b => a.triggerEvent(b)
export const tryTeleport_Player = a => b => c => a.tryTeleport(b,c)
export const subscribe_PlayerJoinAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PlayerJoinAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_PlayerLeaveAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PlayerLeaveAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_PlayerSpawnAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PlayerSpawnAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_PressurePlatePopAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PressurePlatePopAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_PressurePlatePushAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_PressurePlatePushAfterEventSignal = a => b => a.unsubscribe(b)
export const getBlockHit_ProjectileHitBlockAfterEvent = a => a.getBlockHit()
export const subscribe_ProjectileHitBlockAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ProjectileHitBlockAfterEventSignal = a => b => a.unsubscribe(b)
export const getEntityHit_ProjectileHitEntityAfterEvent = a => a.getEntityHit()
export const subscribe_ProjectileHitEntityAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ProjectileHitEntityAfterEventSignal = a => b => a.unsubscribe(b)
export const registerEntityTypeDynamicProperties_PropertyRegistry = a => b => c => a.registerEntityTypeDynamicProperties(b,c)
export const registerWorldDynamicProperties_PropertyRegistry = a => b => a.registerWorldDynamicProperties(b)
export const addObjective_Scoreboard = a => b => c => a.addObjective(b,c)
export const clearObjectiveAtDisplaySlot_Scoreboard = a => b => a.clearObjectiveAtDisplaySlot(b)
export const getObjective_Scoreboard = a => b => a.getObjective(b)
export const getObjectiveAtDisplaySlot_Scoreboard = a => b => a.getObjectiveAtDisplaySlot(b)
export const getObjectives_Scoreboard = a => a.getObjectives()
export const getParticipants_Scoreboard = a => a.getParticipants()
export const removeObjective_Scoreboard = a => b => a.removeObjective(b)
export const setObjectiveAtDisplaySlot_Scoreboard = a => b => c => a.setObjectiveAtDisplaySlot(b,c)
export const getEntity_ScoreboardIdentity = a => a.getEntity()
export const isValid_ScoreboardIdentity = a => a.isValid()
export const addScore_ScoreboardObjective = a => b => c => a.addScore(b,c)
export const getParticipants_ScoreboardObjective = a => a.getParticipants()
export const getScore_ScoreboardObjective = a => b => a.getScore(b)
export const getScores_ScoreboardObjective = a => a.getScores()
export const hasParticipant_ScoreboardObjective = a => b => a.hasParticipant(b)
export const isValid_ScoreboardObjective = a => a.isValid()
export const removeParticipant_ScoreboardObjective = a => b => a.removeParticipant(b)
export const setScore_ScoreboardObjective = a => b => c => a.setScore(b,c)
export const isValid_ScreenDisplay = a => a.isValid()
export const setActionBar_ScreenDisplay = a => b => a.setActionBar(b)
export const setTitle_ScreenDisplay = a => b => c => a.setTitle(b,c)
export const updateSubtitle_ScreenDisplay = a => b => a.updateSubtitle(b)
export const subscribe_ScriptEventCommandMessageAfterEventSignal = a => b => c => a.subscribe(b,c)
export const unsubscribe_ScriptEventCommandMessageAfterEventSignal = a => b => a.unsubscribe(b)
export const subscribe_ServerMessageAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_ServerMessageAfterEventSignal = a => b => a.unsubscribe(b)
export const clearRun_System = a => b => a.clearRun(b)
export const run_System = a => b => a.run(b)
export const runInterval_System = a => b => c => a.runInterval(b,c)
export const runTimeout_System = a => b => c => a.runTimeout(b,c)
export const subscribe_TargetBlockHitAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_TargetBlockHitAfterEventSignal = a => b => a.unsubscribe(b)
export const constructor_Trigger = a => b => a.constructor(b)
export const subscribe_TripWireTripAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_TripWireTripAfterEventSignal = a => b => a.unsubscribe(b)
export const add_Vector = a => b => M.Vector.add(a,b)
export const constructor_Vector = a => b => c => d => a.constructor(b,c,d)
export const cross_Vector = a => b => M.Vector.cross(a,b)
export const distance_Vector = a => b => M.Vector.distance(a,b)
export const divide_Vector = a => b => M.Vector.divide(a,b)
export const equals_Vector = a => b => a.equals(b)
export const length_Vector = a => a.length()
export const lengthSquared_Vector = a => a.lengthSquared()
export const lerp_Vector = a => b => c => M.Vector.lerp(a,b,c)
export const max_Vector = a => b => M.Vector.max(a,b)
export const min_Vector = a => b => M.Vector.min(a,b)
export const multiply_Vector = a => b => M.Vector.multiply(a,b)
export const normalized_Vector = a => a.normalized()
export const slerp_Vector = a => b => c => M.Vector.slerp(a,b,c)
export const subtract_Vector = a => b => M.Vector.subtract(a,b)
export const subscribe_WatchdogTerminateBeforeEventSignal = a => b => a.subscribe(b)
export const unsubscribe_WatchdogTerminateBeforeEventSignal = a => b => a.unsubscribe(b)
export const subscribe_WeatherChangeAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_WeatherChangeAfterEventSignal = a => b => a.unsubscribe(b)
export const broadcastClientMessage_World = a => b => c => a.broadcastClientMessage(b,c)
export const getAbsoluteTime_World = a => a.getAbsoluteTime()
export const getAllPlayers_World = a => a.getAllPlayers()
export const getDay_World = a => a.getDay()
export const getDefaultSpawnLocation_World = a => a.getDefaultSpawnLocation()
export const getDimension_World = a => b => a.getDimension(b)
export const getDynamicProperty_World = a => b => a.getDynamicProperty(b)
export const getEntity_World = a => b => a.getEntity(b)
export const getMoonPhase_World = a => a.getMoonPhase()
export const getPlayers_World = a => b => a.getPlayers(b)
export const getTimeOfDay_World = a => a.getTimeOfDay()
export const playMusic_World = a => b => c => a.playMusic(b,c)
export const playSound_World = a => b => c => d => a.playSound(b,c,d)
export const queueMusic_World = a => b => c => a.queueMusic(b,c)
export const removeDynamicProperty_World = a => b => a.removeDynamicProperty(b)
export const sendMessage_World = a => b => a.sendMessage(b)
export const setAbsoluteTime_World = a => b => a.setAbsoluteTime(b)
export const setDefaultSpawnLocation_World = a => b => a.setDefaultSpawnLocation(b)
export const setDynamicProperty_World = a => b => c => a.setDynamicProperty(b,c)
export const setTimeOfDay_World = a => b => a.setTimeOfDay(b)
export const stopMusic_World = a => a.stopMusic()
export const subscribe_WorldInitializeAfterEventSignal = a => b => a.subscribe(b)
export const unsubscribe_WorldInitializeAfterEventSignal = a => b => a.unsubscribe(b)